# -*- coding: utf-8 -*-
"""Model Evaluation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i5UBk6Wa2tZHBLxZCo1ADPPjv7EJkYqj
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

data=pd.read_csv('Admission_Predict.csv')

data.head()

"""## Train and Testing the model"""

x=data.drop(['Chance of Admit '],axis=1) 
y=data['Chance of Admit ']

from sklearn.model_selection import train_test_split 
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.15)

x_train

y_train

x_test

y_test

"""## Model Evaluation"""

from sklearn.ensemble import GradientBoostingRegressor
model = GradientBoostingRegressor()
model.fit(x_train,y_train)

model.score(x_test,y_test)

y_predict=model.predict(x_test)

from sklearn.metrics import mean_squared_error, r2_score,mean_absolute_error
import numpy as np
print('Mean Absolute Error:', mean_absolute_error(y_test, y_predict))  
print('Mean Squared Error:', mean_squared_error(y_test, y_predict))  
print('Root Mean Squared Error:', np.sqrt(mean_squared_error(y_test, y_predict)))

y_train = (y_train>0.5)
y_test = (y_test>0.5)

from sklearn.linear_model._logistic import LogisticRegression

lore = LogisticRegression(random_state=0, max_iter=1000)

lr = lore.fit(x_train, y_train)

y_pred = lr.predict(x_test)

y_pred

